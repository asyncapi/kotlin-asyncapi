{
  "version": "3",
  "listProblem": [
    {
      "tool": "Code Inspection",
      "category": "Redundant constructs",
      "categoryPath": [
        {
          "id": "Kotlin",
          "name": "Kotlin"
        },
        {
          "id": "Kotlin/Redundant constructs",
          "name": "Redundant constructs"
        }
      ],
      "type": "Unused symbol",
      "tags": [
        "kotlin"
      ],
      "severity": "High",
      "comment": "Function \"containsRef\" is never used",
      "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
      "sources": [
        {
          "type": "file",
          "path": "kotlin-asyncapi-core/src/main/kotlin/com/asyncapi/kotlinasyncapi/model/Schema.kt",
          "language": "kotlin",
          "line": 152,
          "offset": 16,
          "length": 11,
          "code": {
            "startLine": 150,
            "length": 11,
            "offset": 69,
            "surroundingCode": "        Schema().apply(build).also { contains = it }\n\n    inline fun containsRef(build: Reference.() -> Unit): Reference =\n        Reference().apply(build).also { contains = it }\n"
          }
        }
      ],
      "attributes": {
        "module": "kotlin-asyncapi-core",
        "inspectionName": "UnusedSymbol"
      },
      "hash": "4dfb382c535ddaccfb4d7016e9c29818c797efd172989c1d0a21c839bd946034"
    },
    {
      "tool": "Code Inspection",
      "category": "Redundant constructs",
      "categoryPath": [
        {
          "id": "Kotlin",
          "name": "Kotlin"
        },
        {
          "id": "Kotlin/Redundant constructs",
          "name": "Redundant constructs"
        }
      ],
      "type": "Unused symbol",
      "tags": [
        "kotlin"
      ],
      "severity": "High",
      "comment": "Function \"propertyNamesRef\" is never used",
      "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
      "sources": [
        {
          "type": "file",
          "path": "kotlin-asyncapi-core/src/main/kotlin/com/asyncapi/kotlinasyncapi/model/Schema.kt",
          "language": "kotlin",
          "line": 179,
          "offset": 16,
          "length": 16,
          "code": {
            "startLine": 177,
            "length": 16,
            "offset": 74,
            "surroundingCode": "        Schema().apply(build).also { propertyNames = it }\n\n    inline fun propertyNamesRef(build: Reference.() -> Unit): Reference =\n        Reference().apply(build).also { propertyNames = it }\n"
          }
        }
      ],
      "attributes": {
        "module": "kotlin-asyncapi-core",
        "inspectionName": "UnusedSymbol"
      },
      "hash": "60a575edb37233f21e9c435a407edcdb5c3de744ab00e0232ffab349f2ea4324"
    },
    {
      "tool": "Code Inspection",
      "category": "Redundant constructs",
      "categoryPath": [
        {
          "id": "Kotlin",
          "name": "Kotlin"
        },
        {
          "id": "Kotlin/Redundant constructs",
          "name": "Redundant constructs"
        }
      ],
      "type": "Unused symbol",
      "tags": [
        "kotlin"
      ],
      "severity": "High",
      "comment": "Function \"thenRef\" is never used",
      "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
      "sources": [
        {
          "type": "file",
          "path": "kotlin-asyncapi-core/src/main/kotlin/com/asyncapi/kotlinasyncapi/model/Schema.kt",
          "language": "kotlin",
          "line": 191,
          "offset": 16,
          "length": 7,
          "code": {
            "startLine": 189,
            "length": 7,
            "offset": 65,
            "surroundingCode": "        Schema().apply(build).also { then = it }\n\n    inline fun thenRef(build: Reference.() -> Unit): Reference =\n        Reference().apply(build).also { then = it }\n"
          }
        }
      ],
      "attributes": {
        "module": "kotlin-asyncapi-core",
        "inspectionName": "UnusedSymbol"
      },
      "hash": "997f80d37595a15169145b8028950512accd812bf261fc9c828090dc913957fe"
    },
    {
      "tool": "Code Inspection",
      "category": "Redundant constructs",
      "categoryPath": [
        {
          "id": "Kotlin",
          "name": "Kotlin"
        },
        {
          "id": "Kotlin/Redundant constructs",
          "name": "Redundant constructs"
        }
      ],
      "type": "Unused symbol",
      "tags": [
        "kotlin"
      ],
      "severity": "High",
      "comment": "Function \"itemsRef\" is never used",
      "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
      "sources": [
        {
          "type": "file",
          "path": "kotlin-asyncapi-core/src/main/kotlin/com/asyncapi/kotlinasyncapi/model/Schema.kt",
          "language": "kotlin",
          "line": 131,
          "offset": 16,
          "length": 8,
          "code": {
            "startLine": 129,
            "length": 8,
            "offset": 66,
            "surroundingCode": "        Schema().apply(build).also { items = it }\n\n    inline fun itemsRef(build: Reference.() -> Unit): Reference =\n        Reference().apply(build).also { items = it }\n"
          }
        }
      ],
      "attributes": {
        "module": "kotlin-asyncapi-core",
        "inspectionName": "UnusedSymbol"
      },
      "hash": "9e49551b5f69f52dfb7287f2ee8a5a60ea45aa6f7b8365107efb6fa02bf5aa7f"
    },
    {
      "tool": "Code Inspection",
      "category": "Redundant constructs",
      "categoryPath": [
        {
          "id": "Kotlin",
          "name": "Kotlin"
        },
        {
          "id": "Kotlin/Redundant constructs",
          "name": "Redundant constructs"
        }
      ],
      "type": "Unused symbol",
      "tags": [
        "kotlin"
      ],
      "severity": "High",
      "comment": "Function \"ifRef\" is never used",
      "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
      "sources": [
        {
          "type": "file",
          "path": "kotlin-asyncapi-core/src/main/kotlin/com/asyncapi/kotlinasyncapi/model/Schema.kt",
          "language": "kotlin",
          "line": 185,
          "offset": 16,
          "length": 5,
          "code": {
            "startLine": 183,
            "length": 5,
            "offset": 65,
            "surroundingCode": "        Schema().apply(build).also { `if` = it }\n\n    inline fun ifRef(build: Reference.() -> Unit): Reference =\n        Reference().apply(build).also { `if` = it }\n"
          }
        }
      ],
      "attributes": {
        "module": "kotlin-asyncapi-core",
        "inspectionName": "UnusedSymbol"
      },
      "hash": "b7e6044a463f71ef1b031ed7ef83db22eedcfba3328a15f0cdfb1dbedcc55e16"
    },
    {
      "tool": "Code Inspection",
      "category": "Redundant constructs",
      "categoryPath": [
        {
          "id": "Kotlin",
          "name": "Kotlin"
        },
        {
          "id": "Kotlin/Redundant constructs",
          "name": "Redundant constructs"
        }
      ],
      "type": "Unused symbol",
      "tags": [
        "kotlin"
      ],
      "severity": "High",
      "comment": "Function \"notRef\" is never used",
      "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
      "sources": [
        {
          "type": "file",
          "path": "kotlin-asyncapi-core/src/main/kotlin/com/asyncapi/kotlinasyncapi/model/Schema.kt",
          "language": "kotlin",
          "line": 212,
          "offset": 16,
          "length": 6,
          "code": {
            "startLine": 210,
            "length": 6,
            "offset": 64,
            "surroundingCode": "        Schema().apply(build).also { not = it }\n\n    inline fun notRef(build: Reference.() -> Unit): Reference =\n        Reference().apply(build).also { not = it }\n"
          }
        }
      ],
      "attributes": {
        "module": "kotlin-asyncapi-core",
        "inspectionName": "UnusedSymbol"
      },
      "hash": "d1bcc8707edae21c310bf1791ddd75b2e4dd0ab6f7247412de03d22baf5ba1f0"
    },
    {
      "tool": "Code Inspection",
      "category": "Redundant constructs",
      "categoryPath": [
        {
          "id": "Kotlin",
          "name": "Kotlin"
        },
        {
          "id": "Kotlin/Redundant constructs",
          "name": "Redundant constructs"
        }
      ],
      "type": "Unused symbol",
      "tags": [
        "kotlin"
      ],
      "severity": "High",
      "comment": "Function \"additionalItemsRef\" is never used",
      "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
      "sources": [
        {
          "type": "file",
          "path": "kotlin-asyncapi-core/src/main/kotlin/com/asyncapi/kotlinasyncapi/model/Schema.kt",
          "language": "kotlin",
          "line": 137,
          "offset": 16,
          "length": 18,
          "code": {
            "startLine": 135,
            "length": 18,
            "offset": 76,
            "surroundingCode": "        Schema().apply(build).also { additionalItems = it }\n\n    inline fun additionalItemsRef(build: Reference.() -> Unit): Reference =\n        Reference().apply(build).also { additionalItems = it }\n"
          }
        }
      ],
      "attributes": {
        "module": "kotlin-asyncapi-core",
        "inspectionName": "UnusedSymbol"
      },
      "hash": "f78ac1c9891f5655b4ac43ffa48cb05d7f2719572821c63d304031aef3de40a3"
    },
    {
      "tool": "Code Inspection",
      "category": "Redundant constructs",
      "categoryPath": [
        {
          "id": "Kotlin",
          "name": "Kotlin"
        },
        {
          "id": "Kotlin/Redundant constructs",
          "name": "Redundant constructs"
        }
      ],
      "type": "Unused symbol",
      "tags": [
        "kotlin"
      ],
      "severity": "High",
      "comment": "Function \"elseRef\" is never used",
      "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
      "sources": [
        {
          "type": "file",
          "path": "kotlin-asyncapi-core/src/main/kotlin/com/asyncapi/kotlinasyncapi/model/Schema.kt",
          "language": "kotlin",
          "line": 197,
          "offset": 16,
          "length": 7,
          "code": {
            "startLine": 195,
            "length": 7,
            "offset": 67,
            "surroundingCode": "        Schema().apply(build).also { `else` = it }\n\n    inline fun elseRef(build: Reference.() -> Unit): Reference =\n        Reference().apply(build).also { `else` = it }\n"
          }
        }
      ],
      "attributes": {
        "module": "kotlin-asyncapi-core",
        "inspectionName": "UnusedSymbol"
      },
      "hash": "f909b1b460befcd8cce39da157003f519488ca5ebdfc56abfbb1438400df92ab"
    }
  ]
}