{"version":"3","listProblem":[{
  "tool": "Code Inspection",
  "category": "Style issues",
  "type": "Class member can have 'private' visibility",
  "tags": [
    "kotlin"
  ],
  "severity": "Moderate",
  "comment": "Property 'scheme' could be private",
  "detailsInfo": "Reports declarations that can be made `private` to follow the encapsulation principle.\n\n**Example:**\n\n\n    class Service(val url: String) {\n        fun connect(): URLConnection = URL(url).openConnection()\n    }\n\nAfter the quick-fix is applied (considering there are no usages of `url` outside of `Service` class):\n\n\n    class Service(private val url: String) {\n        fun connect(): URLConnection = URL(url).openConnection()\n    }\n",
  "sources": [
    {
      "type": "file",
      "path": "kotlin-asyncapi-core/src/main/kotlin/com/asyncapi/kotlinasyncapi/model/component/SecuritySchema.kt",
      "language": "kotlin",
      "line": 20,
      "offset": 9,
      "length": 6,
      "code": {
        "startLine": 18,
        "length": 6,
        "offset": 66,
        "surroundingCode": "    var name: String? = null\n    var `in`: String? = null\n    var scheme: String? = null\n    var flows: OAuthFlows? = null\n    var openIdConnectUrl: String? = null"
      }
    }
  ],
  "attributes": {
    "module": "kotlin-asyncapi-core",
    "inspectionName": "MemberVisibilityCanBePrivate"
  },
  "hash": "404bb8dfb5b2b8ac7ba7b20e47c39adf6aa4b6e2f9fb561bb3f2b12565c1f132"
},{
  "tool": "Code Inspection",
  "category": "Style issues",
  "type": "Class member can have 'private' visibility",
  "tags": [
    "kotlin"
  ],
  "severity": "Moderate",
  "comment": "Property 'bearerFormat' could be private",
  "detailsInfo": "Reports declarations that can be made `private` to follow the encapsulation principle.\n\n**Example:**\n\n\n    class Service(val url: String) {\n        fun connect(): URLConnection = URL(url).openConnection()\n    }\n\nAfter the quick-fix is applied (considering there are no usages of `url` outside of `Service` class):\n\n\n    class Service(private val url: String) {\n        fun connect(): URLConnection = URL(url).openConnection()\n    }\n",
  "sources": [
    {
      "type": "file",
      "path": "kotlin-asyncapi-core/src/main/kotlin/com/asyncapi/kotlinasyncapi/model/component/SecuritySchema.kt",
      "language": "kotlin",
      "line": 24,
      "offset": 9,
      "length": 12,
      "code": {
        "startLine": 22,
        "length": 12,
        "offset": 85,
        "surroundingCode": "    var openIdConnectUrl: String? = null\n    var description: String? = null\n    var bearerFormat: String? = null\n\n    fun type(value: String): String ="
      }
    }
  ],
  "attributes": {
    "module": "kotlin-asyncapi-core",
    "inspectionName": "MemberVisibilityCanBePrivate"
  },
  "hash": "a5fcb0dc8de2f0a75c3b8671f8ca0ad663f7a64a1a9a33aaaa8481763dc5ddd0"
},{
  "tool": "Code Inspection",
  "category": "Style issues",
  "type": "Class member can have 'private' visibility",
  "tags": [
    "kotlin"
  ],
  "severity": "Moderate",
  "comment": "Property 'openIdConnectUrl' could be private",
  "detailsInfo": "Reports declarations that can be made `private` to follow the encapsulation principle.\n\n**Example:**\n\n\n    class Service(val url: String) {\n        fun connect(): URLConnection = URL(url).openConnection()\n    }\n\nAfter the quick-fix is applied (considering there are no usages of `url` outside of `Service` class):\n\n\n    class Service(private val url: String) {\n        fun connect(): URLConnection = URL(url).openConnection()\n    }\n",
  "sources": [
    {
      "type": "file",
      "path": "kotlin-asyncapi-core/src/main/kotlin/com/asyncapi/kotlinasyncapi/model/component/SecuritySchema.kt",
      "language": "kotlin",
      "line": 22,
      "offset": 9,
      "length": 16,
      "code": {
        "startLine": 20,
        "length": 16,
        "offset": 73,
        "surroundingCode": "    var scheme: String? = null\n    var flows: OAuthFlows? = null\n    var openIdConnectUrl: String? = null\n    var description: String? = null\n    var bearerFormat: String? = null"
      }
    }
  ],
  "attributes": {
    "module": "kotlin-asyncapi-core",
    "inspectionName": "MemberVisibilityCanBePrivate"
  },
  "hash": "b47fe8c7ae6929ced36d2dce1fa6d112fe78241949b21432f80e56a002f2d010"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "tags": [
    "kotlin"
  ],
  "severity": "High",
  "comment": "Property \"mqtt5\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "file",
      "path": "kotlin-asyncapi-annotation/src/main/kotlin/com/asyncapi/kotlinasyncapi/annotation/channel/MessageBinding.kt",
      "language": "kotlin",
      "line": 15,
      "offset": 9,
      "length": 5,
      "code": {
        "startLine": 13,
        "length": 5,
        "offset": 161,
        "surroundingCode": "    val amqp1: MessageBinding.AMQP1 = MessageBinding.AMQP1(isDefault = true),\n    val mqtt: MessageBinding.MQTT = MessageBinding.MQTT(isDefault = true),\n    val mqtt5: MessageBinding.MQTT5 = MessageBinding.MQTT5(isDefault = true),\n    val nats: MessageBinding.NATS = MessageBinding.NATS(isDefault = true),\n    val jms: MessageBinding.JMS = MessageBinding.JMS(isDefault = true),"
      }
    }
  ],
  "attributes": {
    "module": "kotlin-asyncapi-annotation",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "04cbde188f1f6afee4867e1a152227866230f01deb0b5b6db4885079b8b5c3f0"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "tags": [
    "kotlin"
  ],
  "severity": "High",
  "comment": "Property \"amqp1\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "file",
      "path": "kotlin-asyncapi-annotation/src/main/kotlin/com/asyncapi/kotlinasyncapi/annotation/channel/MessageBinding.kt",
      "language": "kotlin",
      "line": 13,
      "offset": 9,
      "length": 5,
      "code": {
        "startLine": 11,
        "length": 5,
        "offset": 176,
        "surroundingCode": "    val anypointmq: MessageBinding.AnypointMQ = MessageBinding.AnypointMQ(isDefault = true),\n    val amqp: MessageBinding.AMQP = MessageBinding.AMQP(isDefault = true),\n    val amqp1: MessageBinding.AMQP1 = MessageBinding.AMQP1(isDefault = true),\n    val mqtt: MessageBinding.MQTT = MessageBinding.MQTT(isDefault = true),\n    val mqtt5: MessageBinding.MQTT5 = MessageBinding.MQTT5(isDefault = true),"
      }
    }
  ],
  "attributes": {
    "module": "kotlin-asyncapi-annotation",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "1e4dad9fc0dd4103cc31dc2a5135dcb6c522f636a896df670b567dce7d446522"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "tags": [
    "kotlin"
  ],
  "severity": "High",
  "comment": "Function \"bindingsRef\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "file",
      "path": "kotlin-asyncapi-core/src/main/kotlin/com/asyncapi/kotlinasyncapi/model/channel/Channel.kt",
      "language": "kotlin",
      "line": 50,
      "offset": 16,
      "length": 11,
      "code": {
        "startLine": 48,
        "length": 11,
        "offset": 78,
        "surroundingCode": "        ChannelBindings().apply(build).also { bindings = it }\n\n    inline fun bindingsRef(build: Reference.() -> Unit): Reference =\n        Reference().apply(build).also { bindings = it }\n}"
      }
    }
  ],
  "attributes": {
    "module": "kotlin-asyncapi-core",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "41818d73de269f0de8578442e5535b55890e96875109cea7f703cbee494ee2a6"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "tags": [
    "kotlin"
  ],
  "severity": "High",
  "comment": "Property \"sns\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "file",
      "path": "kotlin-asyncapi-annotation/src/main/kotlin/com/asyncapi/kotlinasyncapi/annotation/channel/MessageBinding.kt",
      "language": "kotlin",
      "line": 18,
      "offset": 9,
      "length": 3,
      "code": {
        "startLine": 16,
        "length": 3,
        "offset": 155,
        "surroundingCode": "    val nats: MessageBinding.NATS = MessageBinding.NATS(isDefault = true),\n    val jms: MessageBinding.JMS = MessageBinding.JMS(isDefault = true),\n    val sns: MessageBinding.SNS = MessageBinding.SNS(isDefault = true),\n    val solace: MessageBinding.Solace = MessageBinding.Solace(isDefault = true),\n    val sqs: MessageBinding.SQS = MessageBinding.SQS(isDefault = true),"
      }
    }
  ],
  "attributes": {
    "module": "kotlin-asyncapi-annotation",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "41be37f5776aa07e14e68fca87a33be960b877262272cdfb300fed37ceee58db"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "tags": [
    "kotlin"
  ],
  "severity": "High",
  "comment": "Function \"containsRef\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "file",
      "path": "kotlin-asyncapi-core/src/main/kotlin/com/asyncapi/kotlinasyncapi/model/Schema.kt",
      "language": "kotlin",
      "line": 152,
      "offset": 16,
      "length": 11,
      "code": {
        "startLine": 150,
        "length": 11,
        "offset": 69,
        "surroundingCode": "        Schema().apply(build).also { contains = it }\n\n    inline fun containsRef(build: Reference.() -> Unit): Reference =\n        Reference().apply(build).also { contains = it }\n"
      }
    }
  ],
  "attributes": {
    "module": "kotlin-asyncapi-core",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "4dfb382c535ddaccfb4d7016e9c29818c797efd172989c1d0a21c839bd946034"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "tags": [
    "kotlin"
  ],
  "severity": "High",
  "comment": "Function \"propertyNamesRef\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "file",
      "path": "kotlin-asyncapi-core/src/main/kotlin/com/asyncapi/kotlinasyncapi/model/Schema.kt",
      "language": "kotlin",
      "line": 179,
      "offset": 16,
      "length": 16,
      "code": {
        "startLine": 177,
        "length": 16,
        "offset": 74,
        "surroundingCode": "        Schema().apply(build).also { propertyNames = it }\n\n    inline fun propertyNamesRef(build: Reference.() -> Unit): Reference =\n        Reference().apply(build).also { propertyNames = it }\n"
      }
    }
  ],
  "attributes": {
    "module": "kotlin-asyncapi-core",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "60a575edb37233f21e9c435a407edcdb5c3de744ab00e0232ffab349f2ea4324"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "tags": [
    "kotlin"
  ],
  "severity": "High",
  "comment": "Property \"nats\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "file",
      "path": "kotlin-asyncapi-annotation/src/main/kotlin/com/asyncapi/kotlinasyncapi/annotation/channel/MessageBinding.kt",
      "language": "kotlin",
      "line": 16,
      "offset": 9,
      "length": 4,
      "code": {
        "startLine": 14,
        "length": 4,
        "offset": 161,
        "surroundingCode": "    val mqtt: MessageBinding.MQTT = MessageBinding.MQTT(isDefault = true),\n    val mqtt5: MessageBinding.MQTT5 = MessageBinding.MQTT5(isDefault = true),\n    val nats: MessageBinding.NATS = MessageBinding.NATS(isDefault = true),\n    val jms: MessageBinding.JMS = MessageBinding.JMS(isDefault = true),\n    val sns: MessageBinding.SNS = MessageBinding.SNS(isDefault = true),"
      }
    }
  ],
  "attributes": {
    "module": "kotlin-asyncapi-annotation",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "6b2b97fac0253a609055a5e67373724ed51d2403e2c16e05046d9572e57912df"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "tags": [
    "kotlin"
  ],
  "severity": "High",
  "comment": "Property \"redis\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "file",
      "path": "kotlin-asyncapi-annotation/src/main/kotlin/com/asyncapi/kotlinasyncapi/annotation/channel/MessageBinding.kt",
      "language": "kotlin",
      "line": 22,
      "offset": 9,
      "length": 5,
      "code": {
        "startLine": 20,
        "length": 5,
        "offset": 158,
        "surroundingCode": "    val sqs: MessageBinding.SQS = MessageBinding.SQS(isDefault = true),\n    val stomp: MessageBinding.STOMP = MessageBinding.STOMP(isDefault = true),\n    val redis: MessageBinding.Redis = MessageBinding.Redis(isDefault = true),\n    val mercure: MessageBinding.Mercure = MessageBinding.Mercure(isDefault = true),\n    val ibmmq: MessageBinding.IBMMQ = MessageBinding.IBMMQ(isDefault = true)"
      }
    }
  ],
  "attributes": {
    "module": "kotlin-asyncapi-annotation",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "76db88c070a13adce6343bd801b98e7f794812a436804f5559dfdab1eac557d5"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "tags": [
    "kotlin"
  ],
  "severity": "High",
  "comment": "Property \"jms\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "file",
      "path": "kotlin-asyncapi-annotation/src/main/kotlin/com/asyncapi/kotlinasyncapi/annotation/channel/MessageBinding.kt",
      "language": "kotlin",
      "line": 17,
      "offset": 9,
      "length": 3,
      "code": {
        "startLine": 15,
        "length": 3,
        "offset": 161,
        "surroundingCode": "    val mqtt5: MessageBinding.MQTT5 = MessageBinding.MQTT5(isDefault = true),\n    val nats: MessageBinding.NATS = MessageBinding.NATS(isDefault = true),\n    val jms: MessageBinding.JMS = MessageBinding.JMS(isDefault = true),\n    val sns: MessageBinding.SNS = MessageBinding.SNS(isDefault = true),\n    val solace: MessageBinding.Solace = MessageBinding.Solace(isDefault = true),"
      }
    }
  ],
  "attributes": {
    "module": "kotlin-asyncapi-annotation",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "89c73b5aff12144d049bad5388967ade7ba29a8ae4720d404079d31d528c2427"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "tags": [
    "kotlin"
  ],
  "severity": "High",
  "comment": "Property \"mercure\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "file",
      "path": "kotlin-asyncapi-annotation/src/main/kotlin/com/asyncapi/kotlinasyncapi/annotation/channel/MessageBinding.kt",
      "language": "kotlin",
      "line": 23,
      "offset": 9,
      "length": 7,
      "code": {
        "startLine": 21,
        "length": 7,
        "offset": 164,
        "surroundingCode": "    val stomp: MessageBinding.STOMP = MessageBinding.STOMP(isDefault = true),\n    val redis: MessageBinding.Redis = MessageBinding.Redis(isDefault = true),\n    val mercure: MessageBinding.Mercure = MessageBinding.Mercure(isDefault = true),\n    val ibmmq: MessageBinding.IBMMQ = MessageBinding.IBMMQ(isDefault = true)\n)"
      }
    }
  ],
  "attributes": {
    "module": "kotlin-asyncapi-annotation",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "92646a1e3c8b9a77859173c29997693cbd762c7305434d4f748a00f9ba709e45"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "tags": [
    "kotlin"
  ],
  "severity": "High",
  "comment": "Function \"thenRef\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "file",
      "path": "kotlin-asyncapi-core/src/main/kotlin/com/asyncapi/kotlinasyncapi/model/Schema.kt",
      "language": "kotlin",
      "line": 191,
      "offset": 16,
      "length": 7,
      "code": {
        "startLine": 189,
        "length": 7,
        "offset": 65,
        "surroundingCode": "        Schema().apply(build).also { then = it }\n\n    inline fun thenRef(build: Reference.() -> Unit): Reference =\n        Reference().apply(build).also { then = it }\n"
      }
    }
  ],
  "attributes": {
    "module": "kotlin-asyncapi-core",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "997f80d37595a15169145b8028950512accd812bf261fc9c828090dc913957fe"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "tags": [
    "kotlin"
  ],
  "severity": "High",
  "comment": "Function \"itemsRef\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "file",
      "path": "kotlin-asyncapi-core/src/main/kotlin/com/asyncapi/kotlinasyncapi/model/Schema.kt",
      "language": "kotlin",
      "line": 131,
      "offset": 16,
      "length": 8,
      "code": {
        "startLine": 129,
        "length": 8,
        "offset": 66,
        "surroundingCode": "        Schema().apply(build).also { items = it }\n\n    inline fun itemsRef(build: Reference.() -> Unit): Reference =\n        Reference().apply(build).also { items = it }\n"
      }
    }
  ],
  "attributes": {
    "module": "kotlin-asyncapi-core",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "9e49551b5f69f52dfb7287f2ee8a5a60ea45aa6f7b8365107efb6fa02bf5aa7f"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "tags": [
    "kotlin"
  ],
  "severity": "High",
  "comment": "Property \"sqs\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "file",
      "path": "kotlin-asyncapi-annotation/src/main/kotlin/com/asyncapi/kotlinasyncapi/annotation/channel/MessageBinding.kt",
      "language": "kotlin",
      "line": 20,
      "offset": 9,
      "length": 3,
      "code": {
        "startLine": 18,
        "length": 3,
        "offset": 161,
        "surroundingCode": "    val sns: MessageBinding.SNS = MessageBinding.SNS(isDefault = true),\n    val solace: MessageBinding.Solace = MessageBinding.Solace(isDefault = true),\n    val sqs: MessageBinding.SQS = MessageBinding.SQS(isDefault = true),\n    val stomp: MessageBinding.STOMP = MessageBinding.STOMP(isDefault = true),\n    val redis: MessageBinding.Redis = MessageBinding.Redis(isDefault = true),"
      }
    }
  ],
  "attributes": {
    "module": "kotlin-asyncapi-annotation",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "a8ffe8b808395aa0bef3afb50ac8dd848e6082d5e9d50e6a0d41a830799de40f"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "tags": [
    "kotlin"
  ],
  "severity": "High",
  "comment": "Function \"ifRef\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "file",
      "path": "kotlin-asyncapi-core/src/main/kotlin/com/asyncapi/kotlinasyncapi/model/Schema.kt",
      "language": "kotlin",
      "line": 185,
      "offset": 16,
      "length": 5,
      "code": {
        "startLine": 183,
        "length": 5,
        "offset": 65,
        "surroundingCode": "        Schema().apply(build).also { `if` = it }\n\n    inline fun ifRef(build: Reference.() -> Unit): Reference =\n        Reference().apply(build).also { `if` = it }\n"
      }
    }
  ],
  "attributes": {
    "module": "kotlin-asyncapi-core",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "b7e6044a463f71ef1b031ed7ef83db22eedcfba3328a15f0cdfb1dbedcc55e16"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "tags": [
    "kotlin"
  ],
  "severity": "High",
  "comment": "Function \"schemaRef\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "file",
      "path": "kotlin-asyncapi-core/src/main/kotlin/com/asyncapi/kotlinasyncapi/model/channel/Parameter.kt",
      "language": "kotlin",
      "line": 28,
      "offset": 16,
      "length": 9,
      "code": {
        "startLine": 26,
        "length": 9,
        "offset": 67,
        "surroundingCode": "        Schema().apply(build).also { schema = it }\n\n    inline fun schemaRef(build: Reference.() -> Unit): Reference =\n        Reference().apply(build).also { schema = it }\n"
      }
    }
  ],
  "attributes": {
    "module": "kotlin-asyncapi-core",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "c89ad462d8aef871d607526c16dbe2aa1ef5506c69d6c5e22a026a60d7918a75"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "tags": [
    "kotlin"
  ],
  "severity": "High",
  "comment": "Property \"ws\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "file",
      "path": "kotlin-asyncapi-annotation/src/main/kotlin/com/asyncapi/kotlinasyncapi/annotation/channel/MessageBinding.kt",
      "language": "kotlin",
      "line": 9,
      "offset": 9,
      "length": 2,
      "code": {
        "startLine": 7,
        "length": 2,
        "offset": 119,
        "surroundingCode": "    val isDefault: Boolean = false,\n    val http: MessageBinding.HTTP = MessageBinding.HTTP(isDefault = true),\n    val ws: MessageBinding.WebSockets = MessageBinding.WebSockets(isDefault = true),\n    val kafka: MessageBinding.Kafka = MessageBinding.Kafka(isDefault = true),\n    val anypointmq: MessageBinding.AnypointMQ = MessageBinding.AnypointMQ(isDefault = true),"
      }
    }
  ],
  "attributes": {
    "module": "kotlin-asyncapi-annotation",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "cae69404195759d024ec9c5190aea05f157c20832493847000c6b055b0aa82b9"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "tags": [
    "kotlin"
  ],
  "severity": "High",
  "comment": "Property \"stomp\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "file",
      "path": "kotlin-asyncapi-annotation/src/main/kotlin/com/asyncapi/kotlinasyncapi/annotation/channel/MessageBinding.kt",
      "language": "kotlin",
      "line": 21,
      "offset": 9,
      "length": 5,
      "code": {
        "startLine": 19,
        "length": 5,
        "offset": 161,
        "surroundingCode": "    val solace: MessageBinding.Solace = MessageBinding.Solace(isDefault = true),\n    val sqs: MessageBinding.SQS = MessageBinding.SQS(isDefault = true),\n    val stomp: MessageBinding.STOMP = MessageBinding.STOMP(isDefault = true),\n    val redis: MessageBinding.Redis = MessageBinding.Redis(isDefault = true),\n    val mercure: MessageBinding.Mercure = MessageBinding.Mercure(isDefault = true),"
      }
    }
  ],
  "attributes": {
    "module": "kotlin-asyncapi-annotation",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "d167727cbb48e2500758d2bf93573e194afe5cf314d874ff5c676b54eed35a51"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "tags": [
    "kotlin"
  ],
  "severity": "High",
  "comment": "Function \"notRef\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "file",
      "path": "kotlin-asyncapi-core/src/main/kotlin/com/asyncapi/kotlinasyncapi/model/Schema.kt",
      "language": "kotlin",
      "line": 212,
      "offset": 16,
      "length": 6,
      "code": {
        "startLine": 210,
        "length": 6,
        "offset": 64,
        "surroundingCode": "        Schema().apply(build).also { not = it }\n\n    inline fun notRef(build: Reference.() -> Unit): Reference =\n        Reference().apply(build).also { not = it }\n"
      }
    }
  ],
  "attributes": {
    "module": "kotlin-asyncapi-core",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "d1bcc8707edae21c310bf1791ddd75b2e4dd0ab6f7247412de03d22baf5ba1f0"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "tags": [
    "kotlin"
  ],
  "severity": "High",
  "comment": "Property \"solace\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "file",
      "path": "kotlin-asyncapi-annotation/src/main/kotlin/com/asyncapi/kotlinasyncapi/annotation/channel/MessageBinding.kt",
      "language": "kotlin",
      "line": 19,
      "offset": 9,
      "length": 6,
      "code": {
        "startLine": 17,
        "length": 6,
        "offset": 152,
        "surroundingCode": "    val jms: MessageBinding.JMS = MessageBinding.JMS(isDefault = true),\n    val sns: MessageBinding.SNS = MessageBinding.SNS(isDefault = true),\n    val solace: MessageBinding.Solace = MessageBinding.Solace(isDefault = true),\n    val sqs: MessageBinding.SQS = MessageBinding.SQS(isDefault = true),\n    val stomp: MessageBinding.STOMP = MessageBinding.STOMP(isDefault = true),"
      }
    }
  ],
  "attributes": {
    "module": "kotlin-asyncapi-annotation",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "e404f8c9dfc8b4de00a07a0681c003087379dee0dde498e573c2427bb19849a8"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "tags": [
    "kotlin"
  ],
  "severity": "High",
  "comment": "Function \"additionalItemsRef\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "file",
      "path": "kotlin-asyncapi-core/src/main/kotlin/com/asyncapi/kotlinasyncapi/model/Schema.kt",
      "language": "kotlin",
      "line": 137,
      "offset": 16,
      "length": 18,
      "code": {
        "startLine": 135,
        "length": 18,
        "offset": 76,
        "surroundingCode": "        Schema().apply(build).also { additionalItems = it }\n\n    inline fun additionalItemsRef(build: Reference.() -> Unit): Reference =\n        Reference().apply(build).also { additionalItems = it }\n"
      }
    }
  ],
  "attributes": {
    "module": "kotlin-asyncapi-core",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "f78ac1c9891f5655b4ac43ffa48cb05d7f2719572821c63d304031aef3de40a3"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "tags": [
    "kotlin"
  ],
  "severity": "High",
  "comment": "Function \"elseRef\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "file",
      "path": "kotlin-asyncapi-core/src/main/kotlin/com/asyncapi/kotlinasyncapi/model/Schema.kt",
      "language": "kotlin",
      "line": 197,
      "offset": 16,
      "length": 7,
      "code": {
        "startLine": 195,
        "length": 7,
        "offset": 67,
        "surroundingCode": "        Schema().apply(build).also { `else` = it }\n\n    inline fun elseRef(build: Reference.() -> Unit): Reference =\n        Reference().apply(build).also { `else` = it }\n"
      }
    }
  ],
  "attributes": {
    "module": "kotlin-asyncapi-core",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "f909b1b460befcd8cce39da157003f519488ca5ebdfc56abfbb1438400df92ab"
}]}