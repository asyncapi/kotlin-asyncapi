{
  "version": "3",
  "listProblem": [
    {
      "tool": "Code Inspection",
      "category": "Style issues",
      "categoryPath": [
        {
          "id": "Kotlin",
          "name": "Kotlin"
        },
        {
          "id": "Kotlin/Style issues",
          "name": "Style issues"
        }
      ],
      "type": "Local 'var' is never modified and can be declared as 'val'",
      "tags": [
        "kotlin"
      ],
      "severity": "High",
      "comment": "Variable is never modified, so it can be declared using 'val'",
      "detailsInfo": "Reports local variables declared with the `var` keyword that are never modified.\n\nKotlin encourages to declare practically immutable variables using the `val` keyword, ensuring that their value will never change.\n\n**Example:**\n\n\n      fun example() {\n          var primeNumbers = listOf(1, 2, 3, 5, 7, 11, 13)\n          var fibonacciNumbers = listOf(1, 1, 2, 3, 5, 8, 13)\n          print(\"Same numbers: \" + primeNumbers.intersect(fibonacciNumbers))\n      }\n\nThe quick-fix replaces the `var` keyword with `val`:\n\n\n      fun example() {\n          val primeNumbers = listOf(1, 2, 3, 5, 7, 11, 13)\n          val fibonacciNumbers = listOf(1, 1, 2, 3, 5, 8, 13)\n          print(\"Same numbers: \" + primeNumbers.intersect(fibonacciNumbers))\n      }\n",
      "sources": [
        {
          "type": "file",
          "path": "kotlin-asyncapi-context/src/main/kotlin/com/asyncapi/kotlinasyncapi/context/annotation/processor/AsyncApiComponentProcessor.kt",
          "language": "kotlin",
          "line": 18,
          "offset": 21,
          "length": 3,
          "code": {
            "startLine": 16,
            "length": 3,
            "offset": 145,
            "surroundingCode": "            channels {\n                context.functions.filter { it.hasAnnotation<Channel>() }.forEach { currentFunction ->\n                    var currentAnnotation = currentFunction.findAnnotation<Channel>()!!\n                    currentAnnotation.toChannel()\n                        .apply {"
          }
        }
      ],
      "attributes": {
        "module": "kotlin-asyncapi-context",
        "inspectionName": "CanBeVal"
      },
      "hash": "499fbd606c582a5bcc082630315ad29a32e708cd21dcdab88cc3b28ae2902763",
      "problemType": "REGULAR"
    },
    {
      "tool": "Code Inspection",
      "category": "Style issues",
      "categoryPath": [
        {
          "id": "Kotlin",
          "name": "Kotlin"
        },
        {
          "id": "Kotlin/Style issues",
          "name": "Style issues"
        }
      ],
      "type": "Nested lambda has shadowed implicit parameter",
      "tags": [
        "kotlin"
      ],
      "severity": "Moderate",
      "comment": "Implicit parameter 'it' of enclosing lambda is shadowed",
      "detailsInfo": "Reports nested lambdas with shadowed implicit parameters.\n\n**Example:**\n\n\n    fun foo(listOfLists: List<List<String>>) {\n      listOfLists.forEach {\n        it.forEach {\n          println(it)\n        }\n      }\n    }\n\nAfter the quick-fix is applied:\n\n\n    fun foo(listOfLists: List<List<String>>) {\n      listOfLists.forEach {\n        it.forEach { it1 ->\n          println(it1)\n        }\n      }\n    }\n",
      "sources": [
        {
          "type": "file",
          "path": "kotlin-asyncapi-spring-web/src/main/kotlin/com/asyncapi/kotlinasyncapi/springweb/AsyncApiAutoConfiguration.kt",
          "language": "kotlin",
          "line": 147,
          "offset": 64,
          "length": 2,
          "code": {
            "startLine": 145,
            "length": 2,
            "offset": 195,
            "surroundingCode": "        context.getResource(asyncApiProperties.script.sourcePath).takeIf { it.exists() }?.let {\n            AsyncApiExtension.from(\n                script = it.inputStream.bufferedReader().use { it.readText() }.toScriptSource()\n            )\n        }"
          }
        }
      ],
      "attributes": {
        "module": "kotlin-asyncapi-spring-web",
        "inspectionName": "NestedLambdaShadowedImplicitParameter"
      },
      "hash": "b1419ff3e20a3e0dc6d78b81d2e78bed96e04faddc890a42625e89cbbfb88ac7",
      "problemType": "REGULAR"
    },
    {
      "tool": "Code Inspection",
      "category": "Redundant constructs",
      "categoryPath": [
        {
          "id": "Kotlin",
          "name": "Kotlin"
        },
        {
          "id": "Kotlin/Redundant constructs",
          "name": "Redundant constructs"
        }
      ],
      "type": "Unused symbol",
      "tags": [
        "kotlin"
      ],
      "severity": "High",
      "comment": "Class \"RoomsChannel\" is never used",
      "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
      "sources": [
        {
          "type": "file",
          "path": "kotlin-asyncapi-examples/kotlin-asyncapi-ktor-example/src/main/kotlin/com/asyncapi/kotlinasyncapi/example/ktor/RoomChannel.kt",
          "language": "kotlin",
          "line": 21,
          "offset": 7,
          "length": 12,
          "code": {
            "startLine": 19,
            "length": 12,
            "offset": 14,
            "surroundingCode": "    ]\n)\nclass RoomsChannel {\n\n    @Subscribe("
          }
        }
      ],
      "attributes": {
        "module": "kotlin-asyncapi-ktor-example",
        "inspectionName": "UnusedSymbol"
      },
      "hash": "1d91be46c75a7ba63c16d3a8054a37dc40e167a48a5a7d7e0d2bdbc1370159b3",
      "problemType": "REGULAR"
    },
    {
      "tool": "Code Inspection",
      "category": "Redundant constructs",
      "categoryPath": [
        {
          "id": "Kotlin",
          "name": "Kotlin"
        },
        {
          "id": "Kotlin/Redundant constructs",
          "name": "Redundant constructs"
        }
      ],
      "type": "Unused symbol",
      "tags": [
        "kotlin"
      ],
      "severity": "High",
      "comment": "Function \"trait\" is never used",
      "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
      "sources": [
        {
          "type": "file",
          "path": "kotlin-asyncapi-core/src/main/kotlin/com/asyncapi/kotlinasyncapi/model/channel/MessageTrait.kt",
          "language": "kotlin",
          "line": 12,
          "offset": 16,
          "length": 5,
          "code": {
            "startLine": 10,
            "length": 5,
            "offset": 91,
            "surroundingCode": "@AsyncApiComponent\nclass ReferencableMessageTraitsList : ArrayList<Any>() {\n    inline fun trait(build: MessageTrait.() -> Unit): MessageTrait =\n        MessageTrait().apply(build).also { add(it) }\n"
          }
        }
      ],
      "attributes": {
        "module": "kotlin-asyncapi-core",
        "inspectionName": "UnusedSymbol"
      },
      "hash": "4caa33c6c5b721b93e47fe9cfeb52a38ba8a0796d1b308bb2ba0a94e59a65c43",
      "problemType": "REGULAR"
    },
    {
      "tool": "Code Inspection",
      "category": "Redundant constructs",
      "categoryPath": [
        {
          "id": "Kotlin",
          "name": "Kotlin"
        },
        {
          "id": "Kotlin/Redundant constructs",
          "name": "Redundant constructs"
        }
      ],
      "type": "Unused symbol",
      "tags": [
        "kotlin"
      ],
      "severity": "High",
      "comment": "Function \"headersRef\" is never used",
      "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
      "sources": [
        {
          "type": "file",
          "path": "kotlin-asyncapi-core/src/main/kotlin/com/asyncapi/kotlinasyncapi/model/channel/MessageTrait.kt",
          "language": "kotlin",
          "line": 47,
          "offset": 16,
          "length": 10,
          "code": {
            "startLine": 45,
            "length": 10,
            "offset": 68,
            "surroundingCode": "        Schema().apply(build).also { headers = it }\n\n    inline fun headersRef(build: Reference.() -> Unit): Reference =\n        Reference().apply(build).also { headers = it }\n"
          }
        }
      ],
      "attributes": {
        "module": "kotlin-asyncapi-core",
        "inspectionName": "UnusedSymbol"
      },
      "hash": "5319fdee2868e4fefd77a26e9b3bf470da0fba8031953597f82f746dba8e51e3",
      "problemType": "REGULAR"
    },
    {
      "tool": "Code Inspection",
      "category": "Redundant constructs",
      "categoryPath": [
        {
          "id": "Kotlin",
          "name": "Kotlin"
        },
        {
          "id": "Kotlin/Redundant constructs",
          "name": "Redundant constructs"
        }
      ],
      "type": "Unused symbol",
      "tags": [
        "kotlin"
      ],
      "severity": "High",
      "comment": "Function \"publish\" is never used",
      "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
      "sources": [
        {
          "type": "file",
          "path": "kotlin-asyncapi-examples/kotlin-asyncapi-ktor-example/src/main/kotlin/com/asyncapi/kotlinasyncapi/example/ktor/RoomChannel.kt",
          "language": "kotlin",
          "line": 36,
          "offset": 9,
          "length": 7,
          "code": {
            "startLine": 34,
            "length": 7,
            "offset": 24,
            "surroundingCode": "        ]\n    )\n    fun publish(message: String): Nothing = TODO()\n}\n"
          }
        }
      ],
      "attributes": {
        "module": "kotlin-asyncapi-ktor-example",
        "inspectionName": "UnusedSymbol"
      },
      "hash": "562435ffa2e51331799ee7b8f003fc27becaaefb2ddb73d945afb8573e0cc5ac",
      "problemType": "REGULAR"
    },
    {
      "tool": "Code Inspection",
      "category": "Redundant constructs",
      "categoryPath": [
        {
          "id": "Kotlin",
          "name": "Kotlin"
        },
        {
          "id": "Kotlin/Redundant constructs",
          "name": "Redundant constructs"
        }
      ],
      "type": "Unused symbol",
      "tags": [
        "kotlin"
      ],
      "severity": "High",
      "comment": "Function \"bindingsRef\" is never used",
      "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
      "sources": [
        {
          "type": "file",
          "path": "kotlin-asyncapi-core/src/main/kotlin/com/asyncapi/kotlinasyncapi/model/channel/MessageTrait.kt",
          "language": "kotlin",
          "line": 86,
          "offset": 16,
          "length": 11,
          "code": {
            "startLine": 84,
            "length": 11,
            "offset": 78,
            "surroundingCode": "        MessageBindings().apply(build).also { bindings = it }\n\n    inline fun bindingsRef(build: Reference.() -> Unit): Reference =\n        Reference().apply(build).also { bindings = it }\n"
          }
        }
      ],
      "attributes": {
        "module": "kotlin-asyncapi-core",
        "inspectionName": "UnusedSymbol"
      },
      "hash": "9268d8a25a012d4b375b1a9ca3cc8d04a446efb89fec4d77cdbb6ddba0b168de",
      "problemType": "REGULAR"
    },
    {
      "tool": "Code Inspection",
      "category": "Redundant constructs",
      "categoryPath": [
        {
          "id": "Kotlin",
          "name": "Kotlin"
        },
        {
          "id": "Kotlin/Redundant constructs",
          "name": "Redundant constructs"
        }
      ],
      "type": "Unused symbol",
      "tags": [
        "kotlin"
      ],
      "severity": "High",
      "comment": "Function \"schemaRef\" is never used",
      "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
      "sources": [
        {
          "type": "file",
          "path": "kotlin-asyncapi-core/src/main/kotlin/com/asyncapi/kotlinasyncapi/model/channel/Parameter.kt",
          "language": "kotlin",
          "line": 28,
          "offset": 16,
          "length": 9,
          "code": {
            "startLine": 26,
            "length": 9,
            "offset": 67,
            "surroundingCode": "        Schema().apply(build).also { schema = it }\n\n    inline fun schemaRef(build: Reference.() -> Unit): Reference =\n        Reference().apply(build).also { schema = it }\n"
          }
        }
      ],
      "attributes": {
        "module": "kotlin-asyncapi-core",
        "inspectionName": "UnusedSymbol"
      },
      "hash": "c89ad462d8aef871d607526c16dbe2aa1ef5506c69d6c5e22a026a60d7918a75",
      "problemType": "REGULAR"
    },
    {
      "tool": "Code Inspection",
      "category": "Redundant constructs",
      "categoryPath": [
        {
          "id": "Kotlin",
          "name": "Kotlin"
        },
        {
          "id": "Kotlin/Redundant constructs",
          "name": "Redundant constructs"
        }
      ],
      "type": "Unused symbol",
      "tags": [
        "kotlin"
      ],
      "severity": "High",
      "comment": "Function \"correlationIdRef\" is never used",
      "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
      "sources": [
        {
          "type": "file",
          "path": "kotlin-asyncapi-core/src/main/kotlin/com/asyncapi/kotlinasyncapi/model/channel/MessageTrait.kt",
          "language": "kotlin",
          "line": 53,
          "offset": 16,
          "length": 16,
          "code": {
            "startLine": 51,
            "length": 16,
            "offset": 81,
            "surroundingCode": "        CorrelationID().apply(build).also { correlationId = it }\n\n    inline fun correlationIdRef(build: Reference.() -> Unit): Reference =\n        Reference().apply(build).also { correlationId = it }\n"
          }
        }
      ],
      "attributes": {
        "module": "kotlin-asyncapi-core",
        "inspectionName": "UnusedSymbol"
      },
      "hash": "c901ea1977ee62133d9a34019641590638eea216bb65e8394834f07e8070da07",
      "problemType": "REGULAR"
    }
  ]
}