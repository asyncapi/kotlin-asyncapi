{"version":"3","listProblem":[{
  "tool": "Code Inspection",
  "category": "Style issues",
  "type": "Class member can have 'private' visibility",
  "severity": "Moderate",
  "comment": "Property 'default' could be private",
  "detailsInfo": "Reports declarations that can be made `private` to follow the encapsulation principle.\n\n**Example:**\n\n\n    class Service(val url: String) {\n        fun connect(): URLConnection = URL(url).openConnection()\n    }\n\nAfter the quick-fix is applied (considering there are no usages of `url` outside of `Service` class):\n\n\n    class Service(private val url: String) {\n        fun connect(): URLConnection = URL(url).openConnection()\n    }\n",
  "sources": [
    {
      "type": "file",
      "path": "kotlin-asyncapi-core/src/main/kotlin/org/openfolder/kotlinasyncapi/model/server/ServerVariable.kt",
      "language": "kotlin",
      "line": 18,
      "offset": 9,
      "length": 7,
      "code": {
        "startLine": 16,
        "length": 7,
        "offset": 66,
        "surroundingCode": "class ServerVariable {\n    var enum: List<String>? = null\n    var default: String? = null\n    var description: String? = null\n    var examples: List<String>? = null"
      }
    }
  ],
  "attributes": {
    "module": "kotlin-asyncapi-core",
    "inspectionName": "MemberVisibilityCanBePrivate"
  },
  "hash": "e9ef03ad20b23b9c50669e947e3e96dd80d5148565635257cb2c7350d7fd0193"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "severity": "High",
  "comment": "Function \"containsRef\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "file",
      "path": "kotlin-asyncapi-core/src/main/kotlin/org/openfolder/kotlinasyncapi/model/Schema.kt",
      "language": "kotlin",
      "line": 152,
      "offset": 16,
      "length": 11,
      "code": {
        "startLine": 150,
        "length": 11,
        "offset": 69,
        "surroundingCode": "        Schema().apply(build).also { contains = it }\n\n    inline fun containsRef(build: Reference.() -> Unit): Reference =\n        Reference().apply(build).also { contains = it }\n"
      }
    }
  ],
  "attributes": {
    "module": "kotlin-asyncapi-core",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "24ad7364cb40738022fd9b353f4f66651a5b797b587a7b824dc0af218b6aea15"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "severity": "High",
  "comment": "Function \"publish\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "file",
      "path": "kotlin-asyncapi-examples/kotlin-asyncapi-ktor-example/src/main/kotlin/org/openfolder/kotlinasyncapi/example/ktor/RoomChannel.kt",
      "language": "kotlin",
      "line": 36,
      "offset": 9,
      "length": 7,
      "code": {
        "startLine": 34,
        "length": 7,
        "offset": 24,
        "surroundingCode": "        ]\n    )\n    fun publish(message: String): Nothing = TODO()\n}\n"
      }
    }
  ],
  "attributes": {
    "module": "kotlin-asyncapi-ktor-example",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "3963dacb4c276eb9c2e961361db77a9b96bf214200ee2381b32357c1f4f1692f"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "severity": "High",
  "comment": "Class \"RoomsChannel\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "file",
      "path": "kotlin-asyncapi-examples/kotlin-asyncapi-ktor-example/src/main/kotlin/org/openfolder/kotlinasyncapi/example/ktor/RoomChannel.kt",
      "language": "kotlin",
      "line": 21,
      "offset": 7,
      "length": 12,
      "code": {
        "startLine": 19,
        "length": 12,
        "offset": 14,
        "surroundingCode": "    ]\n)\nclass RoomsChannel {\n\n    @Subscribe("
      }
    }
  ],
  "attributes": {
    "module": "kotlin-asyncapi-ktor-example",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "3bda4e760f62565cce8b3bfd9f638c0cea49350cc115e3573cfad5aff56ae522"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "severity": "High",
  "comment": "Function \"itemsRef\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "file",
      "path": "kotlin-asyncapi-core/src/main/kotlin/org/openfolder/kotlinasyncapi/model/Schema.kt",
      "language": "kotlin",
      "line": 131,
      "offset": 16,
      "length": 8,
      "code": {
        "startLine": 129,
        "length": 8,
        "offset": 66,
        "surroundingCode": "        Schema().apply(build).also { items = it }\n\n    inline fun itemsRef(build: Reference.() -> Unit): Reference =\n        Reference().apply(build).also { items = it }\n"
      }
    }
  ],
  "attributes": {
    "module": "kotlin-asyncapi-core",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "452ecd0c23606eaeb13e94f9682a8c8f6cf2d03ff6f5aad423d20286d682ba67"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "severity": "High",
  "comment": "Function \"additionalItemsRef\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "file",
      "path": "kotlin-asyncapi-core/src/main/kotlin/org/openfolder/kotlinasyncapi/model/Schema.kt",
      "language": "kotlin",
      "line": 137,
      "offset": 16,
      "length": 18,
      "code": {
        "startLine": 135,
        "length": 18,
        "offset": 76,
        "surroundingCode": "        Schema().apply(build).also { additionalItems = it }\n\n    inline fun additionalItemsRef(build: Reference.() -> Unit): Reference =\n        Reference().apply(build).also { additionalItems = it }\n"
      }
    }
  ],
  "attributes": {
    "module": "kotlin-asyncapi-core",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "6f805d9b0151663723f4119dbc470ecb4b0d5a5365a3b2b941b5dc4bb6173cd9"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "severity": "High",
  "comment": "Function \"propertyNamesRef\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "file",
      "path": "kotlin-asyncapi-core/src/main/kotlin/org/openfolder/kotlinasyncapi/model/Schema.kt",
      "language": "kotlin",
      "line": 179,
      "offset": 16,
      "length": 16,
      "code": {
        "startLine": 177,
        "length": 16,
        "offset": 74,
        "surroundingCode": "        Schema().apply(build).also { propertyNames = it }\n\n    inline fun propertyNamesRef(build: Reference.() -> Unit): Reference =\n        Reference().apply(build).also { propertyNames = it }\n"
      }
    }
  ],
  "attributes": {
    "module": "kotlin-asyncapi-core",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "8d71c48f066bd43e6cbd121ccfaee8e7ed71e18c17dab17ab1ccaed16f63252a"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "severity": "High",
  "comment": "Function \"elseRef\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "file",
      "path": "kotlin-asyncapi-core/src/main/kotlin/org/openfolder/kotlinasyncapi/model/Schema.kt",
      "language": "kotlin",
      "line": 197,
      "offset": 16,
      "length": 7,
      "code": {
        "startLine": 195,
        "length": 7,
        "offset": 67,
        "surroundingCode": "        Schema().apply(build).also { `else` = it }\n\n    inline fun elseRef(build: Reference.() -> Unit): Reference =\n        Reference().apply(build).also { `else` = it }\n"
      }
    }
  ],
  "attributes": {
    "module": "kotlin-asyncapi-core",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "9c0d9d48d3ba8e1692c3102fa1cfb2e85a41d1d104142388f89731c78dee58aa"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "severity": "High",
  "comment": "Function \"notRef\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "file",
      "path": "kotlin-asyncapi-core/src/main/kotlin/org/openfolder/kotlinasyncapi/model/Schema.kt",
      "language": "kotlin",
      "line": 212,
      "offset": 16,
      "length": 6,
      "code": {
        "startLine": 210,
        "length": 6,
        "offset": 64,
        "surroundingCode": "        Schema().apply(build).also { not = it }\n\n    inline fun notRef(build: Reference.() -> Unit): Reference =\n        Reference().apply(build).also { not = it }\n"
      }
    }
  ],
  "attributes": {
    "module": "kotlin-asyncapi-core",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "a61ada52476c2d0a5811015f4ea0f10730b6c80ec24bfaad7323b02470dde059"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "severity": "High",
  "comment": "Function \"ifRef\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "file",
      "path": "kotlin-asyncapi-core/src/main/kotlin/org/openfolder/kotlinasyncapi/model/Schema.kt",
      "language": "kotlin",
      "line": 185,
      "offset": 16,
      "length": 5,
      "code": {
        "startLine": 183,
        "length": 5,
        "offset": 65,
        "surroundingCode": "        Schema().apply(build).also { `if` = it }\n\n    inline fun ifRef(build: Reference.() -> Unit): Reference =\n        Reference().apply(build).also { `if` = it }\n"
      }
    }
  ],
  "attributes": {
    "module": "kotlin-asyncapi-core",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "bb47d71a3886d1ff3e4dd5dd3e2f407cff97f09484590653dfae387019c830ee"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "severity": "High",
  "comment": "Function \"thenRef\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "file",
      "path": "kotlin-asyncapi-core/src/main/kotlin/org/openfolder/kotlinasyncapi/model/Schema.kt",
      "language": "kotlin",
      "line": 191,
      "offset": 16,
      "length": 7,
      "code": {
        "startLine": 189,
        "length": 7,
        "offset": 65,
        "surroundingCode": "        Schema().apply(build).also { then = it }\n\n    inline fun thenRef(build: Reference.() -> Unit): Reference =\n        Reference().apply(build).also { then = it }\n"
      }
    }
  ],
  "attributes": {
    "module": "kotlin-asyncapi-core",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "eb29278708eddb6a1fdd33ff64b1a5b3fdb988fad8eb4b2aa6d8b5fefc905ce2"
}]}