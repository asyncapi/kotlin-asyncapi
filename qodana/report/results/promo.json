{
  "version": "3",
  "listProblem": [
    {
      "tool": "Code Inspection",
      "category": "Naming conventions",
      "categoryPath": [
        {
          "id": "Kotlin",
          "name": "Kotlin"
        },
        {
          "id": "Kotlin/Naming conventions",
          "name": "Naming conventions"
        }
      ],
      "type": "Property naming convention",
      "tags": [
        "kotlin"
      ],
      "severity": "Moderate",
      "comment": "Property name ```$ref``` should start with a lowercase letter",
      "detailsInfo": "Reports property names that do not follow the recommended naming conventions.\n\n\nConsistent naming allows for easier code reading and understanding.\nAccording to the [Kotlin official style guide](https://kotlinlang.org/docs/coding-conventions.html#naming-rules),\nproperty names should start with a lowercase letter and use camel case.\n\nIt is possible to introduce other naming rules by changing the \"Pattern\" regular expression.\n\n**Example:**\n\n\n      val My_Cool_Property = \"\"\n\nThe quick-fix renames the class according to the Kotlin naming conventions:\n\n\n      val myCoolProperty = \"\"\n",
      "sources": [
        {
          "type": "file",
          "path": "kotlin-asyncapi-core/src/main/kotlin/com/asyncapi/kotlinasyncapi/model/Reference.kt",
          "language": "kotlin",
          "line": 5,
          "offset": 18,
          "length": 6,
          "code": {
            "startLine": 3,
            "length": 6,
            "offset": 54,
            "surroundingCode": "@AsyncApiComponent\nclass Reference {\n    lateinit var `$ref`: String\n\n    fun ref(value: String): String ="
          }
        }
      ],
      "attributes": {
        "module": "kotlin-asyncapi-core",
        "inspectionName": "PropertyName"
      },
      "hash": "a9d8fd446c7e41ea527828cc9a064ebba0b1a86264a1b88dbfc42d64a4c76dda",
      "problemType": "REGULAR"
    },
    {
      "tool": "Code Inspection",
      "category": "Redundant constructs",
      "categoryPath": [
        {
          "id": "Kotlin",
          "name": "Kotlin"
        },
        {
          "id": "Kotlin/Redundant constructs",
          "name": "Redundant constructs"
        }
      ],
      "type": "Unused symbol",
      "tags": [
        "kotlin"
      ],
      "severity": "High",
      "comment": "Function \"bindingsRef\" is never used",
      "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
      "sources": [
        {
          "type": "file",
          "path": "kotlin-asyncapi-core/src/main/kotlin/com/asyncapi/kotlinasyncapi/model/channel/Channel.kt",
          "language": "kotlin",
          "line": 50,
          "offset": 16,
          "length": 11,
          "code": {
            "startLine": 48,
            "length": 11,
            "offset": 78,
            "surroundingCode": "        ChannelBindings().apply(build).also { bindings = it }\n\n    inline fun bindingsRef(build: Reference.() -> Unit): Reference =\n        Reference().apply(build).also { bindings = it }\n}"
          }
        }
      ],
      "attributes": {
        "module": "kotlin-asyncapi-core",
        "inspectionName": "UnusedSymbol"
      },
      "hash": "41818d73de269f0de8578442e5535b55890e96875109cea7f703cbee494ee2a6",
      "problemType": "REGULAR"
    },
    {
      "tool": "Code Inspection",
      "category": "Redundant constructs",
      "categoryPath": [
        {
          "id": "Kotlin",
          "name": "Kotlin"
        },
        {
          "id": "Kotlin/Redundant constructs",
          "name": "Redundant constructs"
        }
      ],
      "type": "Unused symbol",
      "tags": [
        "kotlin"
      ],
      "severity": "High",
      "comment": "Function \"bindingsRef\" is never used",
      "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
      "sources": [
        {
          "type": "file",
          "path": "kotlin-asyncapi-core/src/main/kotlin/com/asyncapi/kotlinasyncapi/model/server/Server.kt",
          "language": "kotlin",
          "line": 53,
          "offset": 16,
          "length": 11,
          "code": {
            "startLine": 51,
            "length": 11,
            "offset": 77,
            "surroundingCode": "        ServerBindings().apply(build).also { bindings = it }\n\n    inline fun bindingsRef(build: Reference.() -> Unit): Reference =\n        Reference().apply(build).also { bindings = it }\n}"
          }
        }
      ],
      "attributes": {
        "module": "kotlin-asyncapi-core",
        "inspectionName": "UnusedSymbol"
      },
      "hash": "6e89417950572c5dff0674ba10069e3b3455584d417ba770eb4ba5f5c2d4791b",
      "problemType": "REGULAR"
    },
    {
      "tool": "Code Inspection",
      "category": "Redundant constructs",
      "categoryPath": [
        {
          "id": "Kotlin",
          "name": "Kotlin"
        },
        {
          "id": "Kotlin/Redundant constructs",
          "name": "Redundant constructs"
        }
      ],
      "type": "Unused symbol",
      "tags": [
        "kotlin"
      ],
      "severity": "High",
      "comment": "Class \"AsyncApiConfiguration\" is never used",
      "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
      "sources": [
        {
          "type": "file",
          "path": "kotlin-asyncapi-examples/kotlin-asyncapi-spring-boot-example/src/main/kotlin/com/asyncapi/kotlinasyncapi/example/spring/AsyncApiConfiguration.kt",
          "language": "kotlin",
          "line": 8,
          "offset": 16,
          "length": 21,
          "code": {
            "startLine": 6,
            "length": 21,
            "offset": 31,
            "surroundingCode": "\n@Configuration\ninternal class AsyncApiConfiguration {\n\n    @Bean"
          }
        }
      ],
      "attributes": {
        "module": "kotlin-asyncapi-spring-boot-example",
        "inspectionName": "UnusedSymbol"
      },
      "hash": "b40991372bbd3a3dae0c93191d1ad0598186b48a994d50febbad60e6a84a1831",
      "problemType": "REGULAR"
    },
    {
      "tool": "Code Inspection",
      "category": "Redundant constructs",
      "categoryPath": [
        {
          "id": "Kotlin",
          "name": "Kotlin"
        },
        {
          "id": "Kotlin/Redundant constructs",
          "name": "Redundant constructs"
        }
      ],
      "type": "Unused symbol",
      "tags": [
        "kotlin"
      ],
      "severity": "High",
      "comment": "Function \"asyncApiExtension\" is never used",
      "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
      "sources": [
        {
          "type": "file",
          "path": "kotlin-asyncapi-examples/kotlin-asyncapi-spring-boot-example/src/main/kotlin/com/asyncapi/kotlinasyncapi/example/spring/AsyncApiConfiguration.kt",
          "language": "kotlin",
          "line": 11,
          "offset": 9,
          "length": 17,
          "code": {
            "startLine": 9,
            "length": 17,
            "offset": 19,
            "surroundingCode": "\n    @Bean\n    fun asyncApiExtension() = AsyncApiExtension.builder {\n        defaultContentType(\"application/json\")\n        servers {"
          }
        }
      ],
      "attributes": {
        "module": "kotlin-asyncapi-spring-boot-example",
        "inspectionName": "UnusedSymbol"
      },
      "hash": "eedab588ce6ba560c7afa0bcef90f5bd87977c5831ac28bb544268ba20dc2c61",
      "problemType": "REGULAR"
    }
  ]
}