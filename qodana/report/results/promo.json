{
  "version": "3",
  "listProblem": [
    {
      "tool": "Code Inspection",
      "category": "Style issues",
      "categoryPath": [
        {
          "id": "Kotlin",
          "name": "Kotlin"
        },
        {
          "id": "Kotlin/Style issues",
          "name": "Style issues"
        }
      ],
      "type": "Nested lambda has shadowed implicit parameter",
      "tags": [
        "kotlin"
      ],
      "severity": "Moderate",
      "comment": "Implicit parameter 'it' of enclosing lambda is shadowed",
      "detailsInfo": "Reports nested lambdas with shadowed implicit parameters.\n\n**Example:**\n\n\n    fun foo(listOfLists: List<List<String>>) {\n      listOfLists.forEach {\n        it.forEach {\n          println(it)\n        }\n      }\n    }\n\nAfter the quick-fix is applied:\n\n\n    fun foo(listOfLists: List<List<String>>) {\n      listOfLists.forEach {\n        it.forEach { it1 ->\n          println(it1)\n        }\n      }\n    }\n",
      "sources": [
        {
          "type": "file",
          "path": "kotlin-asyncapi-spring-web/src/main/kotlin/com/asyncapi/kotlinasyncapi/springweb/AsyncApiAutoConfiguration.kt",
          "language": "kotlin",
          "line": 147,
          "offset": 64,
          "length": 2,
          "code": {
            "startLine": 145,
            "length": 2,
            "offset": 195,
            "surroundingCode": "        context.getResource(asyncApiProperties.script.sourcePath).takeIf { it.exists() }?.let {\n            AsyncApiExtension.from(\n                script = it.inputStream.bufferedReader().use { it.readText() }.toScriptSource()\n            )\n        }"
          }
        }
      ],
      "attributes": {
        "module": "kotlin-asyncapi-spring-web",
        "inspectionName": "NestedLambdaShadowedImplicitParameter"
      },
      "hash": "b1419ff3e20a3e0dc6d78b81d2e78bed96e04faddc890a42625e89cbbfb88ac7",
      "problemType": "REGULAR"
    },
    {
      "tool": "Code Inspection",
      "category": "Redundant constructs",
      "categoryPath": [
        {
          "id": "Kotlin",
          "name": "Kotlin"
        },
        {
          "id": "Kotlin/Redundant constructs",
          "name": "Redundant constructs"
        }
      ],
      "type": "Unused symbol",
      "tags": [
        "kotlin"
      ],
      "severity": "High",
      "comment": "Class \"RoomsChannel\" is never used",
      "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
      "sources": [
        {
          "type": "file",
          "path": "kotlin-asyncapi-examples/kotlin-asyncapi-ktor-example/src/main/kotlin/com/asyncapi/kotlinasyncapi/example/ktor/RoomChannel.kt",
          "language": "kotlin",
          "line": 21,
          "offset": 7,
          "length": 12,
          "code": {
            "startLine": 19,
            "length": 12,
            "offset": 14,
            "surroundingCode": "    ]\n)\nclass RoomsChannel {\n\n    @Subscribe("
          }
        }
      ],
      "attributes": {
        "module": "kotlin-asyncapi-ktor-example",
        "inspectionName": "UnusedSymbol"
      },
      "hash": "1d91be46c75a7ba63c16d3a8054a37dc40e167a48a5a7d7e0d2bdbc1370159b3",
      "problemType": "REGULAR"
    },
    {
      "tool": "Code Inspection",
      "category": "Redundant constructs",
      "categoryPath": [
        {
          "id": "Kotlin",
          "name": "Kotlin"
        },
        {
          "id": "Kotlin/Redundant constructs",
          "name": "Redundant constructs"
        }
      ],
      "type": "Unused symbol",
      "tags": [
        "kotlin"
      ],
      "severity": "High",
      "comment": "Function \"publish\" is never used",
      "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
      "sources": [
        {
          "type": "file",
          "path": "kotlin-asyncapi-examples/kotlin-asyncapi-ktor-example/src/main/kotlin/com/asyncapi/kotlinasyncapi/example/ktor/RoomChannel.kt",
          "language": "kotlin",
          "line": 36,
          "offset": 9,
          "length": 7,
          "code": {
            "startLine": 34,
            "length": 7,
            "offset": 24,
            "surroundingCode": "        ]\n    )\n    fun publish(message: String): Nothing = TODO()\n}\n"
          }
        }
      ],
      "attributes": {
        "module": "kotlin-asyncapi-ktor-example",
        "inspectionName": "UnusedSymbol"
      },
      "hash": "562435ffa2e51331799ee7b8f003fc27becaaefb2ddb73d945afb8573e0cc5ac",
      "problemType": "REGULAR"
    }
  ]
}