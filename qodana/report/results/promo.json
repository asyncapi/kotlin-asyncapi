{
  "version": "3",
  "listProblem": [
    {
      "tool": "Code Inspection",
      "category": "Style issues",
      "categoryPath": [
        {
          "id": "Kotlin",
          "name": "Kotlin"
        },
        {
          "id": "Kotlin/Style issues",
          "name": "Style issues"
        }
      ],
      "type": "Class member can have 'private' visibility",
      "tags": [
        "kotlin"
      ],
      "severity": "Moderate",
      "comment": "Property 'tokenUrl' could be private",
      "detailsInfo": "Reports declarations that can be made `private` to follow the encapsulation principle.\n\n**Example:**\n\n\n    class Service(val url: String) {\n        fun connect(): URLConnection = URL(url).openConnection()\n    }\n\nAfter the quick-fix is applied (considering there are no usages of `url` outside of `Service` class):\n\n\n    class Service(private val url: String) {\n        fun connect(): URLConnection = URL(url).openConnection()\n    }\n",
      "sources": [
        {
          "type": "file",
          "path": "kotlin-asyncapi-core/src/main/kotlin/com/asyncapi/kotlinasyncapi/model/component/OAuthFlows.kt",
          "language": "kotlin",
          "line": 28,
          "offset": 9,
          "length": 8,
          "code": {
            "startLine": 26,
            "length": 8,
            "offset": 67,
            "surroundingCode": "class OAuthFlow {\n    var authorizationUrl: String? = null\n    var tokenUrl: String? = null\n    var scopes: Map<String, String>? = null\n    var refreshUrl: String? = null"
          }
        }
      ],
      "attributes": {
        "module": "kotlin-asyncapi-core",
        "inspectionName": "MemberVisibilityCanBePrivate"
      },
      "hash": "5cb9ee6baae8f0e0855ade058e4756aee9eeeb1fb7220063e85b748aaf958d69"
    },
    {
      "tool": "Code Inspection",
      "category": "Style issues",
      "categoryPath": [
        {
          "id": "Kotlin",
          "name": "Kotlin"
        },
        {
          "id": "Kotlin/Style issues",
          "name": "Style issues"
        }
      ],
      "type": "Class member can have 'private' visibility",
      "tags": [
        "kotlin"
      ],
      "severity": "Moderate",
      "comment": "Property 'asyncApiExtensions' could be private",
      "detailsInfo": "Reports declarations that can be made `private` to follow the encapsulation principle.\n\n**Example:**\n\n\n    class Service(val url: String) {\n        fun connect(): URLConnection = URL(url).openConnection()\n    }\n\nAfter the quick-fix is applied (considering there are no usages of `url` outside of `Service` class):\n\n\n    class Service(private val url: String) {\n        fun connect(): URLConnection = URL(url).openConnection()\n    }\n",
      "sources": [
        {
          "type": "file",
          "path": "kotlin-asyncapi-ktor/src/main/kotlin/com/asyncapi/kotlinasyncapi/ktor/AsyncApiModule.kt",
          "language": "kotlin",
          "line": 92,
          "offset": 9,
          "length": 18,
          "code": {
            "startLine": 90,
            "length": 18,
            "offset": 15,
            "surroundingCode": "    }\n\n    val asyncApiExtensions = listOfNotNull(\n        configuration.extension,\n        *configuration.extensions.toTypedArray(),"
          }
        }
      ],
      "attributes": {
        "module": "kotlin-asyncapi-ktor",
        "inspectionName": "MemberVisibilityCanBePrivate"
      },
      "hash": "98935ecabb8a1636d3bfbfc0fe55edcdc74366faded0207c48c74cae163d774f"
    },
    {
      "tool": "Code Inspection",
      "category": "Style issues",
      "categoryPath": [
        {
          "id": "Kotlin",
          "name": "Kotlin"
        },
        {
          "id": "Kotlin/Style issues",
          "name": "Style issues"
        }
      ],
      "type": "Class member can have 'private' visibility",
      "tags": [
        "kotlin"
      ],
      "severity": "Moderate",
      "comment": "Property 'refreshUrl' could be private",
      "detailsInfo": "Reports declarations that can be made `private` to follow the encapsulation principle.\n\n**Example:**\n\n\n    class Service(val url: String) {\n        fun connect(): URLConnection = URL(url).openConnection()\n    }\n\nAfter the quick-fix is applied (considering there are no usages of `url` outside of `Service` class):\n\n\n    class Service(private val url: String) {\n        fun connect(): URLConnection = URL(url).openConnection()\n    }\n",
      "sources": [
        {
          "type": "file",
          "path": "kotlin-asyncapi-core/src/main/kotlin/com/asyncapi/kotlinasyncapi/model/component/OAuthFlows.kt",
          "language": "kotlin",
          "line": 30,
          "offset": 9,
          "length": 10,
          "code": {
            "startLine": 28,
            "length": 10,
            "offset": 85,
            "surroundingCode": "    var tokenUrl: String? = null\n    var scopes: Map<String, String>? = null\n    var refreshUrl: String? = null\n\n    fun authorizationUrl(value: String): String ="
          }
        }
      ],
      "attributes": {
        "module": "kotlin-asyncapi-core",
        "inspectionName": "MemberVisibilityCanBePrivate"
      },
      "hash": "a8af3cd5824f5f69f29d9ee078898220931afaab31227c54ed90699c725e02b5"
    },
    {
      "tool": "Code Inspection",
      "category": "Style issues",
      "categoryPath": [
        {
          "id": "Kotlin",
          "name": "Kotlin"
        },
        {
          "id": "Kotlin/Style issues",
          "name": "Style issues"
        }
      ],
      "type": "Class member can have 'private' visibility",
      "tags": [
        "kotlin"
      ],
      "severity": "Moderate",
      "comment": "Property 'asyncApiService' could be private",
      "detailsInfo": "Reports declarations that can be made `private` to follow the encapsulation principle.\n\n**Example:**\n\n\n    class Service(val url: String) {\n        fun connect(): URLConnection = URL(url).openConnection()\n    }\n\nAfter the quick-fix is applied (considering there are no usages of `url` outside of `Service` class):\n\n\n    class Service(private val url: String) {\n        fun connect(): URLConnection = URL(url).openConnection()\n    }\n",
      "sources": [
        {
          "type": "file",
          "path": "kotlin-asyncapi-ktor/src/main/kotlin/com/asyncapi/kotlinasyncapi/ktor/AsyncApiModule.kt",
          "language": "kotlin",
          "line": 102,
          "offset": 9,
          "length": 15,
          "code": {
            "startLine": 100,
            "length": 15,
            "offset": 15,
            "surroundingCode": "    )\n\n    val asyncApiService: AsyncApiService = DefaultAsyncApiService(asyncApiExtensions)\n\n    val asyncApiSerializer: AsyncApiSerializer = DefaultAsyncApiSerializer()"
          }
        }
      ],
      "attributes": {
        "module": "kotlin-asyncapi-ktor",
        "inspectionName": "MemberVisibilityCanBePrivate"
      },
      "hash": "b237bb12bfdf97c98f8fcf8743754622998c6a59009baf85e2917567081f76b0"
    },
    {
      "tool": "Code Inspection",
      "category": "Style issues",
      "categoryPath": [
        {
          "id": "Kotlin",
          "name": "Kotlin"
        },
        {
          "id": "Kotlin/Style issues",
          "name": "Style issues"
        }
      ],
      "type": "Class member can have 'private' visibility",
      "tags": [
        "kotlin"
      ],
      "severity": "Moderate",
      "comment": "Property 'scopes' could be private",
      "detailsInfo": "Reports declarations that can be made `private` to follow the encapsulation principle.\n\n**Example:**\n\n\n    class Service(val url: String) {\n        fun connect(): URLConnection = URL(url).openConnection()\n    }\n\nAfter the quick-fix is applied (considering there are no usages of `url` outside of `Service` class):\n\n\n    class Service(private val url: String) {\n        fun connect(): URLConnection = URL(url).openConnection()\n    }\n",
      "sources": [
        {
          "type": "file",
          "path": "kotlin-asyncapi-core/src/main/kotlin/com/asyncapi/kotlinasyncapi/model/component/OAuthFlows.kt",
          "language": "kotlin",
          "line": 29,
          "offset": 9,
          "length": 6,
          "code": {
            "startLine": 27,
            "length": 6,
            "offset": 82,
            "surroundingCode": "    var authorizationUrl: String? = null\n    var tokenUrl: String? = null\n    var scopes: Map<String, String>? = null\n    var refreshUrl: String? = null\n"
          }
        }
      ],
      "attributes": {
        "module": "kotlin-asyncapi-core",
        "inspectionName": "MemberVisibilityCanBePrivate"
      },
      "hash": "c787c02d11fdf339f96024909892bac1fb7cef3fbc872cd7af4a04a42cb761f2"
    },
    {
      "tool": "Code Inspection",
      "category": "Style issues",
      "categoryPath": [
        {
          "id": "Kotlin",
          "name": "Kotlin"
        },
        {
          "id": "Kotlin/Style issues",
          "name": "Style issues"
        }
      ],
      "type": "Class member can have 'private' visibility",
      "tags": [
        "kotlin"
      ],
      "severity": "Moderate",
      "comment": "Property 'authorizationUrl' could be private",
      "detailsInfo": "Reports declarations that can be made `private` to follow the encapsulation principle.\n\n**Example:**\n\n\n    class Service(val url: String) {\n        fun connect(): URLConnection = URL(url).openConnection()\n    }\n\nAfter the quick-fix is applied (considering there are no usages of `url` outside of `Service` class):\n\n\n    class Service(private val url: String) {\n        fun connect(): URLConnection = URL(url).openConnection()\n    }\n",
      "sources": [
        {
          "type": "file",
          "path": "kotlin-asyncapi-core/src/main/kotlin/com/asyncapi/kotlinasyncapi/model/component/OAuthFlows.kt",
          "language": "kotlin",
          "line": 27,
          "offset": 9,
          "length": 16,
          "code": {
            "startLine": 25,
            "length": 16,
            "offset": 45,
            "surroundingCode": "@AsyncApiComponent\nclass OAuthFlow {\n    var authorizationUrl: String? = null\n    var tokenUrl: String? = null\n    var scopes: Map<String, String>? = null"
          }
        }
      ],
      "attributes": {
        "module": "kotlin-asyncapi-core",
        "inspectionName": "MemberVisibilityCanBePrivate"
      },
      "hash": "cf0c0d323976b5c8de42b75bac905ae89c0300143d5b8e3040619d5c92e49092"
    },
    {
      "tool": "Code Inspection",
      "category": "Style issues",
      "categoryPath": [
        {
          "id": "Kotlin",
          "name": "Kotlin"
        },
        {
          "id": "Kotlin/Style issues",
          "name": "Style issues"
        }
      ],
      "type": "Class member can have 'private' visibility",
      "tags": [
        "kotlin"
      ],
      "severity": "Moderate",
      "comment": "Property 'asyncApiSerializer' could be private",
      "detailsInfo": "Reports declarations that can be made `private` to follow the encapsulation principle.\n\n**Example:**\n\n\n    class Service(val url: String) {\n        fun connect(): URLConnection = URL(url).openConnection()\n    }\n\nAfter the quick-fix is applied (considering there are no usages of `url` outside of `Service` class):\n\n\n    class Service(private val url: String) {\n        fun connect(): URLConnection = URL(url).openConnection()\n    }\n",
      "sources": [
        {
          "type": "file",
          "path": "kotlin-asyncapi-ktor/src/main/kotlin/com/asyncapi/kotlinasyncapi/ktor/AsyncApiModule.kt",
          "language": "kotlin",
          "line": 104,
          "offset": 9,
          "length": 18,
          "code": {
            "startLine": 102,
            "length": 18,
            "offset": 95,
            "surroundingCode": "    val asyncApiService: AsyncApiService = DefaultAsyncApiService(asyncApiExtensions)\n\n    val asyncApiSerializer: AsyncApiSerializer = DefaultAsyncApiSerializer()\n\n    fun Application.asyncApiModule() = routing {"
          }
        }
      ],
      "attributes": {
        "module": "kotlin-asyncapi-ktor",
        "inspectionName": "MemberVisibilityCanBePrivate"
      },
      "hash": "e88a2220768c767c531c42f68be87328a05be650a0561bed7757eb1607581148"
    }
  ]
}